<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC0
        CwAAAk1TRnQBSQFMAgEBAwEAAQgBAQEIAQEBFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGbYAAxQBGwMjATQDCgENqAADCQEMAykBPgMTARowAAMHAQoDSQGJA1kByQMx
        AU5AAAJZAWQB7AEAAR8BOgH/A18B4AMgAS6kAAMaASUCWgFXAcUDSgGKAw0BESwAAz0BaQMHAf8DCgH/
        A0IB9QM+AWs8AANOAZQBDQFPAZoB/wEIAToBXgH/A1cB6AMsAUSgAAM3AVsDWQHHAl8BWgHbAzUBVywA
        AyYBOANZAfIDGQH/Ax8B/wMGAf8DPAFoOAADAwEEAkUBRgF+AUICWQH1AQoBQQGFAf8BGQE8AVkB/gNA
        AXEDAgEDlAADMwFSA0wBkgMcAScCVwFVAboCWwFYAcsDAAEBLAADLAFEA0IB9QMkAf8DJgH/AwgB/wM8
        AWg8AAMwAU0BJQFeAV8B+wEPAVIBnwH/AQABIwFAAf8DUQGnAwQBBYgAAwcBCgM0AVQDTAGSAxIBGQM+
        AWsDUAGdAmIBWAHpAyQBNiwAAwIBAwM4AVwDVAHuAycB/wMlAf8DQgH1AzwBaDwAAygBPQJYAWEB5gEM
        AUoBkgH/ATkBQAFCAf0DVgG2AxUBHXwAAwgBCwMsAUMDPwFtA0EBcgMPARQDPgFrAzYBWQMzAVMCYQFb
        AeECRgFFAX80AAM4AVwDQgH1AywB/wMpAf8DDAH/Az0BaTwAAwkBDAJYAVsBxgEQAU8BmQH/AQABKQFH
        Af8DWgHVAxgBIXgAAxUBHQNWAbYCYAFcAdQDMwFTA0gBhQMzAVMDJgE5A0QBegJcAVkByQJTAVIBqDQA
        AwIBAwMvAUkDTAHzAywB/wMrAf8DQgH1Az4BazwAAw0BEgJPAVEBnAErAWoBfwH+AQgBOAFdAf8DXQHt
        Ay4BSAgAAw0BEgMUARwDAQECYAADBAEGAzIBUQJeAVwBzgNfAeADVQGyAzIBUQJJAUoBiQMiATECWAFW
        AbsDWwHIPAADOAFdA0wB8wMyAf8DLgH/AxIB/wM8AWgDBwEJAVECUgGnAzQBVDAAAwYBCANIAYUBSAJi
        AfYBBgE7AWIB/wNZAfICPAE9AWcDBAEGA0gBhwNJAf4DVwHFAyABLmQAAxoBJAJTAU8BpQF/AXYBIgH+
        AXEBWAErAfwCYQFbAeECYQFbAeEBbgFRASsB/AFvAVYBKwH8AmEBXAHcAlIBUQGnAkYBRQF/AyQBNgMA
        AQEsAAMvAUkDWQH1AzMB/wM0Af8BFgETARAB/wNIAYQBVAJhAe4BXAJhAdw4AAM1AVYBDgFQAZgB/wEM
        AUkBkgH/ARQBMgFKAf4DSwGQA2AB1AOfAf8DbgH+A10B7QMaASRoAAMXASADOAFdAkcBRgGAAlIBUQGn
        AlwBVQHqAX8BXwEoAfsCWgFYAcACXgFbAdACXwFYAeMCYgFYAekCXAFaAc0DNQFXAw0BESQAAwIBAwM4
        AVwDVAHuAzYB/wI0ATMB/wETARIBEQH/AQABRAGZAf8BAAGTAfgB/wFaAlwBzQMaASUDFAEcAxQBHAMP
        ARQnAAEBAykBPgJcAWEB3AEOAUwBlQH/AR8BNQFGAf4DfwH+A6UB/wOhAf8DaQH+A1oB1QMOARN0AANS
        AakCYQFbAeEDIgExA0QBegM1AVUDUAGeAlgBVgG7Al8BWgHbA0oBiwMTARooAAM2BFkB9QE4AjcB/wJR
        AVIB/wG1AakBogH/AV0BngG6Af8BAAGVAfgB/wEpAWcBhAH6ASkBZwGEAfoBIQFfAZEB+wFZAlwBzywA
        AxwBJwJYAWEB5gN/Af4DowH/A7EB/wOdAf8DOwH/A1kB8gM5AWB0AAJJAUgBiAJhAV0B4gNKAYoDJgE5
        AzYBWQM/AWwDHQEpA1sBywJbAVkBxAMpAT4oAAMqAUECWwFhAeEBQQFCAUMB/wPdAf8D/AH/Ac8ByQHG
        Af8BhQGaAakB/wEAAZ4B9QH/AQABngH3Af8BAAGqAf4B/wNKAYscAAMHAQoDHwEtAyEBMAM4AV4DVgG2
        A2IB7wOxAf8DpwH/A6kB/wEdASABIgH/A1oB5AMjATQDBwEKdAADOgFiAXEBWAErAfwDMwFTAzQBVAM/
        AWwDEwEaAk0BTgGWAzYBWQMaASQDCQEMEAADCgENAVACUQGfAwUBBwgAAyMBNAFIAWIBaAH2AQYBuAL/
        AS4BjQG2Af8BzgHEAb0B/wLtAewB/wP3Af8B2QHNAcUB/wEyAaEB0gH/AQQBrgH8Af8BWgJeAdUDCwEP
        HAADGQEjA2IB7wPEAf8DyQH/A78B/wPBAf8DtQH/A5sB/wELASUBNwH/AQUBNgFaAf8DWQHyAzgBXngA
        AxYBHwGnAUoBPgH9A1YBswNIAYYDEAEVAk0BTgGVAzEBThwAAT0CPgFqAQABjQHyAf8DWQHHA0ABcAMn
        AToDAQECAycBOwEAAasB6AH/AQwBxAL/AUQBlQG0Af8B1AHIAcEB/wL0AfUC/wH4Ae8B/wEwAakB2gH/
        AVIBZQFmAfQDHQEpIAADBQEHA1wBzwPZAf8DygH/A8QB/wPGAf8DuAH/A40B/wFoAWoBawH+AQ4BSgGP
        Af8BIQFRAXMB/gNYAeZ8AANRAaIDXwHgAzQBVANCAXQDMwFTGAADFwEgAVMCVQGtAVkCZAHsAQABoAH3
        Af8BAAGdAfQB/wEAAaEB9AH/A1ABmgMBAQIEAAMdASoDVQGyARQBvgH7Af8BNQGqAdMB/wGWAboBygH/
        AUEBrgHWAf8BEgG3AfkB/wFAAagBtQH9AzgBXCQAAyYBOANlAfQDzgH/A8gB/wPGAf8DwQH/A5cB/wN0
        Af4DNAFVAzsBYwMaASR8AAMZASMCXAFZAc8CYAFcAdQDPwFtAwcBChgAAxkBIwFaAlwBzQErAXwBowH8
        AQ8BrgH3Af8BEQGxAfgB/wFYAl8B4wMHAQkMAAM7AWUBGwG8AfcB/wEZAcEB/QH/ARMBxAL/ARsByAH9
        Af8BHwHDAfkB/wEgAcQB+wH/AVYCWAG8AwEBAiQAAzsBYwN4AfoDzAH/A8gB/wPJAf8DoAH/A1sB2YwA
        AzMBUgJWAVUBtAMqAUEgAAMQARUBWAJeAd0BKQHUAf4B/wEjAdUB+wH/AT4BdgF9AfgDGwEmDAADOAFe
        AR8BvQH1Af8BLgHYAf4B/wFTAmQB8QFSAlQBpgFeAmUB5QEjAdcB9QH/ASsBeAGaAfwDIQEwJAADAwEE
        Ay0BRQNiAekDzgH/A80B/wOiAf8DSwGPjAADBAEGAxQBHAMIAQsgAAMHAQkBWgJdAcoBVgJYAbwBOQI6
        AWABTwJTAaUDIwE0DAABNQI2AVgBQgGZAb8B/gFbAl4B0AMmATkEAAMKAQ4DKAE8AT4CPwFsAxEBFywA
        AxMBGgNDAXcDUwGqA1gBuQMtAUa8AAMKAQ4cAAMXASADQwF3AwYBCLgAAUIBTQE+BwABPgMAASgDAAFQ
        AwABFAMAAQEBAAEBBQAB8BcAA/8BAAX/AY8B/wHwBAAB/AF/AfgBfwH/AYcB/wHwBAAB/AE/AfgBPwH/
        AYMB/wHwBAAB/AE/AfgBHwH/AYAB/wHwBAAB+AEfAfwBDwH/AeABfwHwBAAB4AEfAfwBBwH/AfABPwHw
        BAABgAEfAf8BAwH/AfgBHwHwBAABgAEfAf8BAQH/AfwBDAFwBAABgAEfAf8BwAEfAf4BAAEwBAAB4AEA
        Af8B4AEfAf8BgAEQBAAB+AEAAT8B4AEAAf8BgAUAAf8BgAEfAfgBAAH/AeAFAAH/AYABHwH4AQAB/gYA
        Af8BgAEeATABAAH+AQABEAQAAf8BgAH+AQABAQH+AQABEAQAAf8BwQH4AQQBAQH/AQABEAQAAf8BwQH4
        AQ4BAAH/AYAB8AQAAf8B4wH8AQ4BAAH/AYAB8AQAAf8B4wH8AQ4BEAH/AeAB8AQAAv8C/gE/Av8B8AQA
        Cw==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>54</value>
  </metadata>
</root>